name: 'Deploy Website'

on:
  workflow_call:
    inputs:
      BUILD_ENV:
        required: true
        type: string
    secrets:
      GCP_CREDENTIALS:
        required: true

jobs:
  deploy:
    environment:
      name: ${{ inputs.BUILD_ENV }}

    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: 'actions/checkout@v3'

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: set up cloud sdk
        uses: 'google-github-actions/setup-gcloud@v0'
        with:
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ vars.PROJECT_ID }}
          export_default_credentials: true

      - name: authorize docker push
        run: gcloud auth configure-docker ${{ vars.REGION }}-docker.pkg.dev --quiet

      - name: build and push container
        run: |-
          docker build --tag ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.SERVICE }}/latest .
          docker push ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.SERVICE }}/latest

      - name: deploy to cloud run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          service: ${{ vars.SERVICE }}
          image: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.SERVICE }}/latest
          region: ${{ vars.REGION }}

      - name: show output
        run: echo ${{ steps.deploy.outputs.url }}
