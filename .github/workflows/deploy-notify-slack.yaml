name: 'Deploy Notify Slack'

on:
  workflow_call:
    inputs:
      BUILD_ENV:
        required: true
        type: string
    secrets:
      GCP_CREDENTIALS:
        required: true
      SLACK_CHANNEL_ID:
        required: true
      SLACK_OAUTH_TOKEN:
        required: true

jobs:
  terraform:
    environment:
      name: ${{ inputs.BUILD_ENV }}

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/notify-slack

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Setup Terraform variables
        id: vars
        run: |-
          cat > pipeline.auto.tfvars <<EOF
          slackChannelId="${{ secrets.SLACK_CHANNEL_ID }}"
          slackOauthToken="${{ secrets.SLACK_OAUTH_TOKEN }}"
          EOF

      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

      - name: Terraform Plan
        run: terraform plan -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
