name: 'Deploy'

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

env:
  PROJECT_ID: devolunch
  SERVICE: devolunch
  REGION: europe-west1
  IMAGE: gcr.io/${{ secrets.GCP_PROJECT }}/prod_data_pipeline
  MEMORY: 1G

jobs:
  install-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install

      - name: Run lint
        run: pnpm lint

      - name: Run typecheck
        run: pnpm typecheck
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v3'

      - name: 'Auth to GCP'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:master .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:master

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --project ${{ env.PROJECT_ID }} \
            --region ${{ env.REGION }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:master \
            --service-account=devolunch-cr@devolunch.iam.gserviceaccount.com \
            --memory ${{ env.MEMORY }} \
            --update-env-vars NODE_ENV=production,SLACK_OAUTH_TOKEN=${{ secrets.SLACK_OAUTH_TOKEN }},SLACK_CHANNEL_ID=${{ secrets.SLACK_CHANNEL_ID }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
